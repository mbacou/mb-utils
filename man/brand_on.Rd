% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.R
\name{brand_on}
\alias{brand_on}
\title{Apply Bootstrap branding to base, lattice and ggplot2 graphics}
\usage{
brand_on(
  bg = "transparent",
  fg = pal(brand()$color$foreground, FALSE),
  accent = pal(unlist(brand()$color[c("primary", "secondary")]), FALSE),
  font = brand()$typography[["monospace-inline"]],
  sequential = colorRampPalette(pal(c("orange", "light", "green")))(20),
  qualitative = brand.colors()
)
}
\arguments{
\item{bg}{a background color.}

\item{fg}{a foreground color.}

\item{accent}{a color for making certain graphical markers 'stand out'
(e.g., the fitted line color for \code{\link[ggplot2:geom_smooth]{ggplot2::geom_smooth()}}).
Can be 2 colors for lattice (stroke vs fill accent).}

\item{font}{a \code{\link[thematic:font_spec]{font_spec()}} object. If missing, font defaults are not altered.}

\item{sequential}{a color palette for graphical markers that encode
numeric values. Can be a vector of color codes or a
\code{\link[thematic:sequential_gradient]{sequential_gradient()}} object.}

\item{qualitative}{a color palette for graphical markers that encode
qualitative values (won't be used in ggplot2 when the number of data
levels exceeds the max allowed colors). Defaults to \code{\link[thematic:okabe_ito]{okabe_ito()}}.}
}
\value{
a theme object as a list
}
\description{
Applies Bootstrap branding to graphics using \code{thematic} R package utilities.
}
\examples{
#brand_on()
lattice::show.settings()

hist(rchisq(100, df=4), freq=FALSE, ylim=c(0, 0.2), col=1:11, border=12, xlab=NA)
grid(NA, NULL, col=4)
curve(dchisq(x, df=4), col=2, lty=2, lwd=2, add=TRUE)


}
